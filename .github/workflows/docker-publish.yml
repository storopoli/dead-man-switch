name: Build and Deploy Docker to GHCR

# This workflow runs when any of the following occur:
# - A push is made to a branch called `main`
# - A tag starting with "v" is created
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.txt"
    tags:
      - v*
env:
  IMAGE_NAME: dead_man_switch

permissions: {}

jobs:
  # This publishes the image to GitHub Packages.
  publish:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        env:
          REPO_OWNER: ${{ github.repository_owner }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          IMAGE_ID=ghcr.io/$REPO_OWNER/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # This strips the git ref prefix from the version.
          VERSION=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')

          # This strips the "v" prefix from the tag name.
          [[ "$GITHUB_REF" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
